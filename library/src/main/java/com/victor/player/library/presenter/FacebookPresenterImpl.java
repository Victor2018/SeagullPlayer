package com.victor.player.library.presenter;import com.victor.http.annotation.HttpParms;import com.victor.http.data.Request;import com.victor.http.inject.HttpInject;import com.victor.http.module.HttpRequest;import com.victor.http.presenter.impl.BasePresenterImpl;import com.victor.player.library.data.FacebookReq;import com.victor.player.library.util.FacebookParser;import com.victor.player.library.view.FacebookView;public class FacebookPresenterImpl<H,T> extends BasePresenterImpl<H,T> {	/*Presenter作为中间层，持有View和Model的引用*/	private FacebookView facebookView;	public FacebookPresenterImpl(FacebookView facebookView) {		this.facebookView = facebookView;	}	@Override	public void onSuccess(T data) {		if (facebookView == null) return;		if (data == null) {			facebookView.OnFacebook(null,"no data response");		} else {			FacebookReq facebookReq = FacebookParser.pareFacebook(data.toString());			facebookView.OnFacebook(facebookReq,"");		}	}	@Override	public void onError(String error) {		if (facebookView == null) return;		facebookView.OnFacebook(null,error);	}	@Override	public void detachView() {		facebookView = null;	}	@HttpParms(method = Request.JSOUP,bodyContentType = HttpRequest.mJsonBodyContentType,			responseCls = FacebookReq.class,httpFramework = HttpRequest.JSOUP_FRAMEWORK)	@Override	public void sendRequest(String url,H header,T parm) {		HttpInject.inject(this);		super.sendRequest(url,header,parm);	}}